// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/jason0x43/go-alfred"
	"google.golang.org/api/option"
	"toggl_time_entry_manipulator/client"
	"toggl_time_entry_manipulator/repository"
)

// Injectors from wire.go:

func initializeRepository(workflow alfred.Workflow, serviceAccount option.ClientOption) (*repository.CachedRepository, error) {
	cacheFile := NewCacheFile(workflow)
	cache, err := NewCache(cacheFile)
	if err != nil {
		return nil, err
	}
	configFile := NewConfigFile(workflow)
	config, err := NewConfig(configFile)
	if err != nil {
		return nil, err
	}
	togglApiKey := config.TogglAPIKey
	togglClient := client.NewTogglClient(togglApiKey)
	estimationClient, err := client.NewEstimationClient(serviceAccount)
	if err != nil {
		return nil, err
	}
	timeEntryRepository := repository.NewTimeEntryRepository(config, togglClient, estimationClient)
	cachedRepository := repository.NewCachedRepository(cache, timeEntryRepository)
	return cachedRepository, nil
}
